import { generatePropertyImageUploadUrl } from "./property-api";

// url groups
export const MULTIPART_STATIC_URLS: string[] = []
export const MULTIPART_DYNAMIC_URL_GENERATORS : GenerateUrlFunction[] = [
    generatePropertyImageUploadUrl
]

type GenerateUrlFunction = (...args: any[]) => string;

function createUrlMatcher(generateUrlFunctions: GenerateUrlFunction[], staticUrls: string[]): (url: string) => boolean {
    return function(url: string): boolean {
        // Check if the url matches any of the static urls
        if (staticUrls.includes(url)) {
            return true;
        }

        // Check if the url matches any of the patterns generated by the generateUrlFunctions
        return generateUrlFunctions.some(generateUrl => {
            const parts = url.split('/');
            const generatedParts = generateUrl('dummy').split('/');
            return parts.length === generatedParts.length && parts.every((part, index) => part === generatedParts[index] || generatedParts[index] === 'dummy');
        });
    }
}

export const isMultipartUrl  = createUrlMatcher(MULTIPART_DYNAMIC_URL_GENERATORS,MULTIPART_STATIC_URLS) 


